---
# This workflow requires a GALAXY_API_KEY secret present in the GitHub
# repository or organization.
#
# See: https://github.com/marketplace/actions/publish-ansible-role-to-galaxy
# See: https://github.com/ansible/galaxy/issues/46

name: Release
on:
  push:
    tags:
      - '*'

defaults:
  run:
    working-directory: 'brunobenchimol.certbot_dns'

jobs:

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # - distro: centos8
          #   playbook: converge-issue-certificate.yml
          #   experimental: false
          - distro: rockylinux9
            playbook: converge.yml
            experimental: false

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'brunobenchimol.certbot_dns'

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install test dependencies.
        run: pip3 install ansible molecule molecule-plugins[docker] docker

      - name: Run Molecule tests.
        run: molecule test
        continue-on-error: ${{ matrix.experimental }}
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_PLAYBOOK: ${{ matrix.playbook }}
          CERTBOT_DNS_API_TOKEN: ${{ secrets.CERTBOT_DNS_API_TOKEN }}
          CERTBOT_DNS_API_EMAIL: ${{ secrets.CERTBOT_DNS_API_EMAIL }}

  release:
    name: Release on Galaxy
    needs:
      - molecule
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v4
        with:
          path: 'brunobenchimol.certbot_dns'

      - name: Set up Python 3.
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Ansible.
        run: pip3 install ansible-base ansible-core

      # Alternative: https://github.com/marketplace/actions/publish-ansible-role-to-galaxy
      - name: Trigger a new import on Galaxy.
        run: ansible-galaxy role import --api-key ${{ secrets.GALAXY_API_KEY }} $(echo ${{ github.repository }} | cut -d/ -f1) $(echo ${{ github.repository }} | cut -d/ -f2)
